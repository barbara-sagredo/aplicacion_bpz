<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_hocsa_bpz.SLX_Comparacion_fechas</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>SLX_Comparacion_fechas</name>
        <script><![CDATA[var SLX_Comparacion_fechas = Class.create();
SLX_Comparacion_fechas.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {


    comparacionFechas: function() {


        var fechaIni = new GlideDateTime();
        var fechaFin = new GlideDateTime();
        fechaIni.setDisplayValue(this.getParameter('sysparm_datefield'));
        fechaFin.setDisplayValue(this.getParameter('sysparm_datefieldFin'));
        var resta = (fechaFin.getNumericValue() - fechaIni.getNumericValue()) / 1000;
        var dias = resta / 86400;

        return dias;



    },
    compFechaIni_Fin: function() {

        var fechaIni = new GlideDate();
        var fechaFin = new GlideDate();
        var hoy = new GlideDate();
        fechaIni.setDisplayValue(this.getParameter('sysparm_datefield'));
        fechaFin.setDisplayValue(this.getParameter('sysparm_datefieldFin'));

        if (fechaIni.getNumericValue() >= fechaFin.getNumericValue()) {
            return '1';
        } else if (fechaFin.getNumericValue() > hoy.getNumericValue()) {
            return '2';
        }




    },
    compareDateToNow: function() {
		
		
		// Se crean GlideDateTime para la fecha actual y para el campo ingresado
        var rightnow = new GlideDateTime();
        var fieldDate = new GlideDateTime();
		fieldDate.setDisplayValue(this.getParameter('sysparm_datefield'));
		
		
        // Se obtiene la porcion de fecha (sin hora) de las variables
        var today = rightnow.getLocalDate();
        var istoday = fieldDate.getLocalDate();
		

        if (istoday.compareTo(today) == 0 ||istoday.compareTo(today) == 1 ) {
            return true;
        
        }else 
		{
			return false;
		}

    },



    getNowDateTime: function() {
        var now = new GlideDate(); //Now Date/Time
        return now;
    },



    type: 'SLX_Comparacion_fechas'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>slx.bs</sys_created_by>
        <sys_created_on>2021-05-03 18:04:37</sys_created_on>
        <sys_id>49c1a8d31b33a8904e288511604bcb64</sys_id>
        <sys_mod_count>77</sys_mod_count>
        <sys_name>SLX_Comparacion_fechas</sys_name>
        <sys_package display_value="bpz" source="x_hocsa_bpz">733350561b7f6810ac750e12604bcbbb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="bpz">733350561b7f6810ac750e12604bcbbb</sys_scope>
        <sys_update_name>sys_script_include_49c1a8d31b33a8904e288511604bcb64</sys_update_name>
        <sys_updated_by>slx.bs</sys_updated_by>
        <sys_updated_on>2021-05-07 14:05:48</sys_updated_on>
    </sys_script_include>
</record_update>
